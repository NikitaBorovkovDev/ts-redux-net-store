{"version":3,"file":"static/js/747.8d574953.chunk.js","mappings":"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","sources":["components/commonComponents/buttonOutline/ButtonOutline.tsx","components/routes/main/banners/bannersComponent/Timer.tsx","components/routes/main/banners/bannersComponent/Banner.tsx","components/routes/main/banners/bannersComponent/SubscribeBanner.tsx","components/routes/main/banners/Banners.tsx","services/findBackgroundColor.ts","components/routes/main/heroSlider/RenderSlides.tsx","components/routes/main/heroSlider/HeroSlider.tsx","services/generateUniqueRandomNumbers.ts","services/sortProducts.ts","components/commonComponents/productCard/ProductCard.tsx","components/routes/main/productSlider/ProductSlider.tsx","components/routes/main/newArrivals/NewArrivals.tsx","components/routes/main/topCategories/TopCategories.tsx","components/routes/main/Main.tsx"],"sourcesContent":["import clsx from 'clsx';\r\nimport './buttonOutline.scss';\r\nimport { memo } from 'react';\r\n\r\ntype Props = {\r\n\tchildren: string | JSX.Element;\r\n\tonClick?: (e?: React.MouseEvent) => any;\r\n\taddedClasses?: string;\r\n};\r\n\r\nconst ButtonOutline = memo((props: Props) => {\r\n\tconst { children = 'button', addedClasses = '' } = props;\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={clsx('btn btn-outline ', addedClasses)}\r\n\t\t\tonClick={props.onClick}>\r\n\t\t\t<span className=\"btn__text btn__text-outline\">{children}</span>\r\n\t\t</button>\r\n\t);\r\n});\r\n\r\nexport default ButtonOutline;\r\n","import {memo} from \"react\";\r\nimport \"../banners.scss\";\r\n\r\ninterface ITimer {\r\n    days: number;\r\n    hours: number;\r\n    minutes: number;\r\n    seconds: number;\r\n}\r\n\r\nconst Timer = memo((props: {timeLeft: ITimer}): JSX.Element => {\r\n    const {days, hours, minutes, seconds} = props.timeLeft;\r\n\r\n    return (\r\n        <div className=\"timer\">\r\n            <div className=\"timer__countdown-text\">Limited time offer</div>\r\n            <div className=\"timer__countdown\">\r\n                <div>\r\n                    <div className=\"timer__items\">\r\n                        <div className=\"timer__item\">\r\n                            <div className=\"timer__numbers timer__days heading-3\">\r\n                                {days}\r\n                            </div>\r\n                            <div className=\"timer__text\">\r\n                                {days === 1 ? \"Day\" : \"Days\"}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"timer__numbers timer__hours heading-3\">\r\n                                {hours}\r\n                            </div>\r\n                            <div className=\"timer__text\">\r\n                                {hours === 1 ? \"Hour\" : \"Hours\"}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"timer__numbers timer__minutes heading-3\">\r\n                                {minutes}\r\n                            </div>\r\n                            <div className=\"timer__text\">\r\n                                {minutes === 1 ? \"Min\" : \"Mins\"}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className=\"timer__numbers timer__seconds heading-3\">\r\n                                {seconds}\r\n                            </div>\r\n                            <div className=\"timer__text\">Sec</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Timer;\r\n","import \"../banners.scss\";\r\n\r\ninterface IBanner {\r\n    subTitle: string;\r\n    title: string;\r\n    button?: JSX.Element;\r\n}\r\n\r\nconst Banner = (props: {\r\n    content: IBanner;\r\n    children?: JSX.Element;\r\n}): JSX.Element => {\r\n    const {subTitle, title, button} = props.content;\r\n    return (\r\n        <div className=\"banners__banner banner\">\r\n            <div>\r\n                <h3 className=\"banner__sub-title\">{subTitle}</h3>\r\n                <h2 className=\"banner__title heading-2\">{title}</h2>\r\n                {button}\r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Banner;\r\n","import {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../banners.scss\";\r\nimport \"./subscribeBanner.scss\";\r\nimport ButtonSolid from \"components/commonComponents/buttonSolid/ButtonSolid\";\r\n\r\ninterface ISubscribeBanner {\r\n    subTitle: string;\r\n    title: string;\r\n    emailSubscribe: {\r\n        inputPlaceholderText: string;\r\n        buttonText: string;\r\n        text: string;\r\n    };\r\n}\r\n\r\nconst SubscribeBanner = (props: {content: ISubscribeBanner}): JSX.Element => {\r\n    const {subTitle, title} = props.content;\r\n    const {inputPlaceholderText, buttonText, text} =\r\n        props.content.emailSubscribe;\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const EMAIL_REGEXP =\r\n        /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n\r\n    function isEmailValid(value: string) {\r\n        return EMAIL_REGEXP.test(value);\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(event.target.value);\r\n        console.log(inputValue);\r\n    };\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (isEmailValid(inputValue)) {\r\n            const email = {email: inputValue};\r\n            console.log(email);\r\n            axios\r\n                .post(\"http://localhost:3009/posts\", email)\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    console.log(response.status);\r\n                    console.log(response.statusText);\r\n                    console.log(response.headers);\r\n                    console.log(response.config);\r\n                });\r\n\r\n            // fetch('http://localhost:3009/posts', {\r\n            //     method: 'POST',\r\n            //     headers: {\r\n            //         'content-type': 'application/json'\r\n            //     },\r\n            //     body: email\r\n            // }).then(data => {\r\n            //     if (data.ok) {\r\n            //         console.log('ok')\r\n            //     } else {\r\n            //         console.log('not ok')\r\n            //     }\r\n            // })\r\n        } else {\r\n            console.log(\"not valid\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"banners__banner banner subscribe-banner\">\r\n            <div>\r\n                <h3 className=\"banner__sub-title\">\r\n                    <span>{subTitle}</span>\r\n                </h3>\r\n                <h2 className=\"banner__title heading-2\">{title}</h2>\r\n                <form\r\n                    autoComplete=\"on\"\r\n                    noValidate\r\n                    action=\"#\"\r\n                    onSubmit={handleSubmit}\r\n                    className=\"banner__form subscribe-banner__form\">\r\n                    <input\r\n                        className=\"banner__input subscribe-banner__input\"\r\n                        name=\"email\"\r\n                        placeholder={inputPlaceholderText}\r\n                        value={inputValue}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <ButtonSolid>{buttonText}</ButtonSolid>\r\n                </form>\r\n                <p className=\"banner__input-text subscribe-banner__input-text\">\r\n                    {text}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubscribeBanner;\r\n","import ButtonOutline from 'components/commonComponents/buttonOutline/ButtonOutline';\r\nimport './banners.scss';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport Timer from './bannersComponent/Timer';\r\nimport Banner from './bannersComponent/Banner';\r\nimport SubscribeBanner from './bannersComponent/SubscribeBanner';\r\nimport { BannerType } from 'interfaces';\r\nimport { Link } from 'react-scroll';\r\n\r\nexport interface IContent {\r\n\ttype: BannerType;\r\n\tsubTitle: string;\r\n\ttitle: string;\r\n\tbutton?: JSX.Element;\r\n\tdeadline?: number;\r\n\temailSubscribe?: {\r\n\t\tinputPlaceholderText: string;\r\n\t\tbuttonText: string;\r\n\t\ttext: string;\r\n\t};\r\n}\r\n\r\nconst Banners = memo(() => {\r\n\tconst [timeLeft, setTimeLeft] = useState<\r\n\t\t{ days: number; hours: number; minutes: number; seconds: number }[]\r\n\t>([]);\r\n\r\n\tconst content: IContent[] = [\r\n\t\t{\r\n\t\t\ttype: BannerType.Default,\r\n\t\t\tsubTitle: 'Summer Collections',\r\n\t\t\ttitle: 'Sale Up to 70%',\r\n\t\t\tbutton: (\r\n\t\t\t\t<Link to=\"new-arrivals\" smooth={true} duration={500}>\r\n\t\t\t\t\t<ButtonOutline>Explore new prices</ButtonOutline>\r\n\t\t\t\t</Link>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: BannerType.Default,\r\n\t\t\tsubTitle: 'Deal of the week',\r\n\t\t\ttitle: 'Stay Warm With Our New Sweaters',\r\n\t\t\tbutton: (\r\n\t\t\t\t<Link to=\"new-arrivals\" smooth={true} duration={500}>\r\n\t\t\t\t\t<ButtonOutline>Shop now</ButtonOutline>\r\n\t\t\t\t</Link>\r\n\t\t\t),\r\n\t\t\tdeadline: +new Date(\r\n\t\t\t\tnew Date().getFullYear(),\r\n\t\t\t\tnew Date().getMonth() + 1,\r\n\t\t\t\t0o1\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: BannerType.Default,\r\n\t\t\tsubTitle: 'New collection',\r\n\t\t\ttitle: 'Shoes & Bags autumn / winter 2020',\r\n\t\t\tbutton: (\r\n\t\t\t\t<Link to=\"new-arrivals\" smooth={true} duration={500}>\r\n\t\t\t\t\t<ButtonOutline>\r\n\t\t\t\t\t\t<>See offers</>\r\n\t\t\t\t\t</ButtonOutline>\r\n\t\t\t\t</Link>\r\n\t\t\t),\r\n\t\t\tdeadline: 1688364200000,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: BannerType.SubscribeForm,\r\n\t\t\tsubTitle: 'For All new Email Subscribers',\r\n\t\t\ttitle: 'Get 5% Off & Free Delivery',\r\n\t\t\temailSubscribe: {\r\n\t\t\t\tinputPlaceholderText: 'Your working email',\r\n\t\t\t\tbuttonText: 'Subscribe',\r\n\t\t\t\ttext: '*Sign up to be the first to hear about exclusive deals, special offers and upcoming collections.',\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTimeDifference = (timeDifference: number) => {\r\n\t\t\tlet days =\r\n\t\t\t\ttimeDifference > 0\r\n\t\t\t\t\t? Math.floor(timeDifference / 1000 / 60 / 60 / 24)\r\n\t\t\t\t\t: 0;\r\n\t\t\tlet hours =\r\n\t\t\t\ttimeDifference > 0\r\n\t\t\t\t\t? Math.floor(timeDifference / 1000 / 60 / 60) % 24\r\n\t\t\t\t\t: 0;\r\n\t\t\tlet minutes =\r\n\t\t\t\ttimeDifference > 0\r\n\t\t\t\t\t? Math.floor(timeDifference / 1000 / 60) % 60\r\n\t\t\t\t\t: 0;\r\n\t\t\tlet seconds =\r\n\t\t\t\ttimeDifference > 0 ? Math.floor(timeDifference / 1000) % 60 : 0;\r\n\t\t\treturn { days, hours, minutes, seconds };\r\n\t\t};\r\n\t\tconst deadlines: number[] = [];\r\n\t\tcontent.forEach((banner) => {\r\n\t\t\tif (banner.deadline) {\r\n\t\t\t\tdeadlines.push(banner.deadline);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet timerId = setInterval(() => {\r\n\t\t\tconst time = deadlines.map((deadline) => {\r\n\t\t\t\tconst diff = deadline - +new Date();\r\n\t\t\t\treturn getTimeDifference(diff);\r\n\t\t\t});\r\n\t\t\tsetTimeLeft(time);\r\n\t\t}, 1000);\r\n\t\treturn () => clearInterval(timerId);\r\n\t}, []);\r\n\r\n\tlet timerIndex = 0;\r\n\r\n\treturn (\r\n\t\t<section className=\"banners\">\r\n\t\t\t{content.map((banner, index) => {\r\n\t\t\t\tconst { subTitle, title, button, deadline, emailSubscribe } =\r\n\t\t\t\t\tbanner;\r\n\t\t\t\tif (deadline) {\r\n\t\t\t\t\tconst component = (\r\n\t\t\t\t\t\t<Banner\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tcontent={{ subTitle, title, button }}>\r\n\t\t\t\t\t\t\t<Timer\r\n\t\t\t\t\t\t\t\tkey={timerIndex}\r\n\t\t\t\t\t\t\t\ttimeLeft={\r\n\t\t\t\t\t\t\t\t\ttimeLeft[timerIndex]\r\n\t\t\t\t\t\t\t\t\t\t? timeLeft[timerIndex]\r\n\t\t\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdays: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\thours: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\tminutes: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\tseconds: 0,\r\n\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Banner>\r\n\t\t\t\t\t);\r\n\t\t\t\t\ttimerIndex = timerIndex + 1;\r\n\t\t\t\t\treturn component;\r\n\t\t\t\t} else if (emailSubscribe) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<SubscribeBanner\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tcontent={{\r\n\t\t\t\t\t\t\t\tsubTitle,\r\n\t\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\t\temailSubscribe,\r\n\t\t\t\t\t\t\t}}></SubscribeBanner>\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Banner\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tcontent={{ subTitle, title, button }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t</section>\r\n\t);\r\n});\r\n\r\nexport default Banners;\r\n","import {FastAverageColor} from \"fast-average-color\";\r\n// Determination of the main background color\r\nconst findBackgroundColor = async (img: string): Promise<string> => {\r\n    try {\r\n        const averageColor = new FastAverageColor();\r\n        const color = await averageColor.getColorAsync(img).catch(() => {\r\n            throw img;\r\n        });\r\n\r\n        return color.hex;\r\n    } catch (error) {\r\n        console.warn(\r\n            `Image analysis error. \\n image path - ${error} \\n просто обработка ошибки если будет ошибка в данных`\r\n        );\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport default findBackgroundColor;\r\n","import {URL_HERO_SLIDER_CONTENT} from \"usedUrls\";\r\nimport ButtonOutline from \"components/commonComponents/buttonOutline/ButtonOutline\";\r\nimport ButtonSolid from \"components/commonComponents/buttonSolid/ButtonSolid\";\r\nimport findBackgroundColor from \"services/findBackgroundColor\";\r\nimport clsx from \"clsx\";\r\nimport chroma from \"chroma-js\";\r\nimport axios from \"axios\";\r\n\r\ninterface ISliderContent {\r\n    subheading?: string;\r\n    heading?: string;\r\n    background?: {\r\n        image?: string;\r\n        color?: string;\r\n    };\r\n    outlineButton?: string;\r\n    solidButton?: string;\r\n}\r\n\r\nconst RenderSlides = async () => {\r\n    const fetchingData = await axios(URL_HERO_SLIDER_CONTENT);\r\n    const sliderContent: ISliderContent[] = await fetchingData.data;\r\n    const slidesArr = await Promise.all(\r\n        sliderContent.map(async (slide, index) => {\r\n            if (Object.keys(slide).length === 0 || !slide) {\r\n                return null;\r\n            }\r\n            let bgColor = \"\";\r\n            let backgroundImage = \"\";\r\n            if (slide.background?.image) {\r\n                try {\r\n                    bgColor = await findBackgroundColor(slide.background.image);\r\n                    backgroundImage = slide.background.image;\r\n                } catch (e) {\r\n                    if (slide.background?.color) {\r\n                        bgColor = slide.background.color;\r\n                    } else {\r\n                        bgColor = \"white\";\r\n                    }\r\n                }\r\n            } else if (slide.background?.color) {\r\n                bgColor = slide.background.color;\r\n            } else {\r\n                bgColor = \"white\";\r\n            }\r\n            let bgLuminance = chroma(bgColor).luminance();\r\n            let fontColor = bgLuminance > 0.5 ? \"black\" : \"white\";\r\n            let textColorClass =\r\n                fontColor === \"black\"\r\n                    ? \"swiper-black-text\"\r\n                    : \"swiper-white-text\";\r\n            let buttonColor = fontColor === \"black\" ? \"\" : \"btn__lightGreen\";\r\n\r\n            let background = backgroundImage\r\n                ? `url(\"${backgroundImage}\")`\r\n                : bgColor;\r\n            return (\r\n                <div\r\n                    className=\"swiper-slide\"\r\n                    key={index}\r\n                    style={{\r\n                        background: background,\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        backgroundPosition: \"center\",\r\n                        backgroundSize: \"cover\",\r\n                    }}>\r\n                    <div className=\"container hero-slider__slide-container\">\r\n                        <div\r\n                            className={clsx(\r\n                                \"hero-slider__slide-subheading\",\r\n                                textColorClass\r\n                            )}>\r\n                            {slide.subheading}\r\n                        </div>\r\n                        <h2\r\n                            className={clsx(\r\n                                \"display-1 hero-slider__slide-heading\",\r\n                                textColorClass\r\n                            )}>\r\n                            {slide.heading}\r\n                        </h2>\r\n                        <div className=\"hero-slider__buttons\">\r\n                            {slide.outlineButton ? (\r\n                                <ButtonOutline addedClasses={buttonColor}>\r\n                                    {slide.outlineButton}\r\n                                </ButtonOutline>\r\n                            ) : null}\r\n                            {slide.solidButton ? (\r\n                                <ButtonSolid>{slide.solidButton}</ButtonSolid>\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    );\r\n    return slidesArr;\r\n};\r\n\r\nexport default RenderSlides;\r\n","import Swiper, {Navigation, Pagination, A11y} from \"swiper\";\r\nimport {useEffect, useState, useRef} from \"react\";\r\nimport Spinner from \"components/commonComponents/spinner/Spinner\";\r\nimport RenderSlides from \"./RenderSlides\";\r\nimport \"swiper/css\";\r\nimport \"./heroSlider.scss\";\r\n\r\nconst HeroSlider = () => {\r\n    const swiperRef = useRef<HTMLDivElement>(null);\r\n    const paginationRef = useRef<HTMLDivElement>(null);\r\n\r\n    const [colorAnalysisInProgress, setColorAnalysisInProgress] =\r\n        useState(true);\r\n    const [slides, setSlides] = useState<(JSX.Element | null)[] | null>([]);\r\n\r\n    const setPaginationColor = (color: string) => {\r\n        paginationRef?.current\r\n            ?.querySelectorAll(\".swiper-pagination-bullet\")\r\n            .forEach((bullet) => {\r\n                bullet.classList.remove(\r\n                    color === \"white\"\r\n                        ? \"swiper-pagination-bullet-black\"\r\n                        : \"swiper-pagination-bullet-white\"\r\n                );\r\n                bullet.classList.add(\r\n                    color !== \"white\"\r\n                        ? \"swiper-pagination-bullet-black\"\r\n                        : \"swiper-pagination-bullet-white\"\r\n                );\r\n            });\r\n    };\r\n\r\n    const changePaginationColor = () => {\r\n        let whiteActiveSlide = swiperRef?.current?.querySelector(\r\n            \".swiper-slide-active .swiper-white-text\"\r\n        );\r\n        let blackActiveSlide = swiperRef?.current?.querySelector(\r\n            \".swiper-slide-active .swiper-black-text\"\r\n        );\r\n        if (\r\n            paginationRef?.current &&\r\n            swiperRef?.current &&\r\n            (whiteActiveSlide || blackActiveSlide)\r\n        ) {\r\n            if (\r\n                swiperRef.current.querySelector(\r\n                    \".swiper-slide-active .swiper-white-text\"\r\n                )\r\n            ) {\r\n                let paginationColor = \"white\";\r\n                setPaginationColor(paginationColor);\r\n            } else {\r\n                let paginationColor = \"black\";\r\n                setPaginationColor(paginationColor);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n        const swiper = new Swiper(\".hero-slider .swiper\", {\r\n            modules: [Navigation, Pagination, A11y],\r\n            observer: true,\r\n            simulateTouch: false,\r\n            on: {\r\n                slideChangeTransitionStart: changePaginationColor,\r\n                observerUpdate: changePaginationColor,\r\n            },\r\n            pagination: {\r\n                el: \".hero-slider .swiper-pagination\",\r\n                clickable: true,\r\n                renderBullet: (\r\n                    index: number | string,\r\n                    bulletClassName: string\r\n                ) => {\r\n                    let currentIndex: number | string = +index + 1;\r\n                    if (+currentIndex < 10) {\r\n                        currentIndex = `0${currentIndex}`;\r\n                    }\r\n                    return `<span class=${bulletClassName}>${currentIndex}<span class=\"underline\"></span></span>`;\r\n                },\r\n            },\r\n            navigation: {\r\n                nextEl: \".hero-slider .swiper-button-next\",\r\n                prevEl: \".hero-slider .swiper-button-prev\",\r\n            },\r\n        });\r\n        RenderSlides().then((res) => {\r\n            setSlides(res);\r\n            setColorAnalysisInProgress(false);\r\n        });\r\n        return function disableSlider() {\r\n            swiper.destroy();\r\n        };\r\n    }, []);\r\n\r\n    const spinner = colorAnalysisInProgress ? (\r\n        <div className=\"swiper-slide\">\r\n            <Spinner />\r\n        </div>\r\n    ) : null;\r\n\r\n    const pagination = !colorAnalysisInProgress ? (\r\n        <div className=\"swiper-pagination container\" ref={paginationRef}></div>\r\n    ) : (\r\n        <div className=\"swiper-pagination container hide\"></div>\r\n    );\r\n\r\n    const content = !spinner && pagination ? slides : null;\r\n    return (\r\n        <section className=\"hero-slider\">\r\n            <div className=\"swiper\" ref={swiperRef}>\r\n                <div className=\"swiper-wrapper\">\r\n                    <>\r\n                        {spinner}\r\n                        {content}\r\n                    </>\r\n                </div>\r\n\r\n                {pagination}\r\n\r\n                <div className=\"swiper-button-prev\"></div>\r\n                <div className=\"swiper-button-next\"></div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HeroSlider;\r\n","function generateUniqueRandomNumbers(\r\n\tnumberOfNumbers: number,\r\n\tmaxNumber: number\r\n): number[] | undefined {\r\n\tlet haveIt: number[] = [];\r\n\r\n\tif (numberOfNumbers <= 0 || maxNumber <= 0) {\r\n\t\tconsole.error('the numbers must be greater than 0');\r\n\t\treturn;\r\n\t}\r\n\r\n\tfunction generateUniqueRandomNumber(maxNumber: number) {\r\n\t\tlet random = Math.floor(Math.random() * maxNumber);\r\n\r\n\t\tif (!haveIt.includes(random)) {\r\n\t\t\thaveIt.push(random);\r\n\t\t\treturn;\r\n\t\t} else if (numberOfNumbers > maxNumber && haveIt.length >= maxNumber) {\r\n\t\t\thaveIt.push(random);\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tgenerateUniqueRandomNumber(maxNumber);\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < numberOfNumbers; i++) {\r\n\t\tgenerateUniqueRandomNumber(maxNumber);\r\n\t}\r\n\r\n\treturn haveIt;\r\n}\r\n\r\nexport default generateUniqueRandomNumbers;\r\n","import generateUniqueRandomNumbers from './generateUniqueRandomNumbers';\r\nimport { IProduct } from 'interfaces';\r\n\r\nexport enum ProductFilter {\r\n\tALL = 'all',\r\n\tWITHOUTDISCOUNT = 'withoutDiscount',\r\n\tWITHDISCOUNT = 'withDiscount',\r\n}\r\n\r\nconst sortProducts = (\r\n\tproducts: IProduct[],\r\n\tquantity: number = 1,\r\n\tfilter: ProductFilter = ProductFilter.ALL\r\n) => {\r\n\tif (quantity < 1) {\r\n\t\tconsole.error(`quantity < 1 \\n${quantity}`);\r\n\t\tquantity = 1;\r\n\t}\r\n\tif (\r\n\t\tfilter !== ProductFilter.ALL &&\r\n\t\tfilter !== ProductFilter.WITHOUTDISCOUNT &&\r\n\t\tfilter !== ProductFilter.WITHDISCOUNT\r\n\t) {\r\n\t\tconsole.warn(\r\n\t\t\t`fetchProducts wrong argument. filter should be equal to: 'all' - default value | 'withoutDiscount' | 'withDiscount') \\n filter=${filter}`\r\n\t\t);\r\n\t\tfilter = ProductFilter.ALL;\r\n\t}\r\n\r\n\tif (filter !== ProductFilter.ALL) {\r\n\t\tif (filter === ProductFilter.WITHDISCOUNT) {\r\n\t\t\tproducts = products.filter((item) => {\r\n\t\t\t\tif (item.discount !== '0') {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t} else if (filter === ProductFilter.WITHOUTDISCOUNT) {\r\n\t\t\tproducts = products.filter((item) => {\r\n\t\t\t\tif (item.discount === '0') {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst randomProducts = generateUniqueRandomNumbers(\r\n\t\tquantity,\r\n\t\tproducts.length\r\n\t);\r\n\tif (!randomProducts) {\r\n\t\tthrow new Error(\r\n\t\t\t`generateUniqueRandomNumbers error arg = (quantity = ${quantity}, productData.length - 1 = ${\r\n\t\t\t\tproducts.length - 1\r\n\t\t\t})`\r\n\t\t);\r\n\t}\r\n\tconst productsArr = randomProducts.map((i) => {\r\n\t\treturn products[i];\r\n\t});\r\n\treturn productsArr;\r\n};\r\n\r\nexport default sortProducts;\r\n","import clsx from 'clsx';\r\nimport ButtonSolid from '../buttonSolid/ButtonSolid';\r\nimport './productCard.scss';\r\nimport { CardType, IProduct } from 'interfaces';\r\nimport {\r\n\taddProductToLocalStorage,\r\n\tremoveProductFromLocalStorage,\r\n\tselectLocalStorageProductsValue,\r\n} from '../../app/cartSlice';\r\nimport { useAppSelector, useAppDispatch } from '../../../hooks/reduxHooks';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport Price from '../price/Price';\r\nimport { Link } from 'react-router-dom';\r\nimport ColorPicker from '../colorPicker/ColorPicker';\r\nimport ProductsParams from '../productsParams/ProductsParams';\r\n\r\ninterface IProductCard {\r\n\tproduct: IProduct;\r\n\tcardType: CardType;\r\n}\r\n\r\nconst ProductCard = (props: IProductCard) => {\r\n\tconst { product, cardType } = props;\r\n\r\n\tconst productsLocalStorageData = useAppSelector(\r\n\t\tselectLocalStorageProductsValue\r\n\t);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst [selectedParams, setSelectedParams] = useState<{\r\n\t\t[key: string]: string;\r\n\t}>({});\r\n\tconst [showWarning, setShowWarning] = useState(false);\r\n\tconst [hovered, setHovered] = useState(false);\r\n\r\n\tconst nameRef = useRef<HTMLParagraphElement>(null);\r\n\tconst cardRef = useRef<HTMLDivElement>(null);\r\n\r\n\tconst defaultHeight = 27;\r\n\tlet maxNameLength = 32;\r\n\r\n\tconst propsValues = selectedParams ? Object.values(selectedParams) : null;\r\n\tconst sortedValue = propsValues\r\n\t\t? propsValues.sort((a, b) =>\r\n\t\t\t\ta.toLowerCase().localeCompare(b.toLowerCase(), 'en')\r\n\t\t  )\r\n\t\t: null;\r\n\r\n\tconst productId = sortedValue\r\n\t\t? `${product.id}+${sortedValue.join('+')}`\r\n\t\t: product.id;\r\n\r\n\tconst isInStorage = productsLocalStorageData.find(\r\n\t\t(productInStorage) => productId === productInStorage.productId\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tObject.keys(product.params).length ===\r\n\t\t\t\tObject.keys(selectedParams).length &&\r\n\t\t\tshowWarning === true\r\n\t\t) {\r\n\t\t\tsetShowWarning(false);\r\n\t\t}\r\n\t}, [selectedParams]);\r\n\r\n\tconst handleAddProductToLocalStorage = () => {\r\n\t\tconst quantity = 1;\r\n\t\tconst { id } = product;\r\n\r\n\t\tisInStorage\r\n\t\t\t? dispatch(removeProductFromLocalStorage(productId))\r\n\t\t\t: dispatch(\r\n\t\t\t\t\taddProductToLocalStorage({\r\n\t\t\t\t\t\tproductId,\r\n\t\t\t\t\t\tid,\r\n\t\t\t\t\t\tquantity,\r\n\t\t\t\t\t\tselectedProductParams: selectedParams,\r\n\t\t\t\t\t})\r\n\t\t\t  );\r\n\t};\r\n\r\n\tlet paramsElements: JSX.Element | null = null;\r\n\r\n\tconst productNameCut = (name: string) => {\r\n\t\tconst nameDivided = name.split(' ');\r\n\t\tlet returnName = '';\r\n\t\tlet currentLength = 0;\r\n\t\tlet i = 0;\r\n\t\tdo {\r\n\t\t\tif (!nameDivided[i]) break;\r\n\t\t\tif (\r\n\t\t\t\t(returnName + ' ' + nameDivided[i]).length + 3 >\r\n\t\t\t\tmaxNameLength\r\n\t\t\t) {\r\n\t\t\t\treturn (returnName += '...');\r\n\t\t\t}\r\n\t\t\treturnName += ' ' + nameDivided[i];\r\n\r\n\t\t\tcurrentLength += nameDivided[i].length + 1;\r\n\t\t\t++i;\r\n\t\t} while (currentLength < maxNameLength);\r\n\t\treturn returnName;\r\n\t};\r\n\r\n\tconst handleTitleMouseHover = (\r\n\t\te: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n\t) => {\r\n\t\tconsole.log(e.type);\r\n\t\tif (nameRef.current && cardRef.current) {\r\n\t\t\tif (e.type === 'mouseover') {\r\n\t\t\t\tsetHovered(true);\r\n\t\t\t\tnameRef.current.textContent = product.name;\r\n\t\t\t\tcardRef.current.style.height = `${\r\n\t\t\t\t\tnameRef.current.getBoundingClientRect().height\r\n\t\t\t\t}px`;\r\n\t\t\t} else if (e.type === 'mouseout') {\r\n\t\t\t\tcardRef.current.style.height = `${defaultHeight}px`;\r\n\t\t\t\tsetHovered(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst requiredParamsKeys = Object.keys(product.params).filter(\r\n\t\t(item) => !Object.keys(selectedParams).includes(item)\r\n\t);\r\n\tconst lastParams = requiredParamsKeys.pop();\r\n\tconst warningMessage =\r\n\t\t'pick ' +\r\n\t\trequiredParamsKeys.join(', ') +\r\n\t\t(requiredParamsKeys.length ? ' and ' : '') +\r\n\t\tlastParams;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={clsx('product-card', `${cardType}-card`)}\r\n\t\t\tkey={product.id}>\r\n\t\t\t<div>\r\n\t\t\t\t<img\r\n\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t'product-card__img',\r\n\t\t\t\t\t\t`product-card__img-${cardType}`\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tsrc={product.imageAndVideo[0].url}\r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"product-card__stars-rating\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"product-card__stars-rating-fill\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: `${(+product.rating / 5) * 70}px`,\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"product-card__description-container\">\r\n\t\t\t\t<div className=\"product-card__description-idle\">\r\n\t\t\t\t\t<div className=\"product-card__text\">\r\n\t\t\t\t\t\t{cardType === CardType.LARGE ? (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Link to={`/shop/${product.id}`}>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonMouseOver={(e) =>\r\n\t\t\t\t\t\t\t\t\t\thandleTitleMouseHover(e)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonMouseOut={(e) => handleTitleMouseHover(e)}\r\n\t\t\t\t\t\t\t\t\tref={cardRef}\r\n\t\t\t\t\t\t\t\t\tstyle={{ height: `${defaultHeight}px` }}\r\n\t\t\t\t\t\t\t\t\tclassName=\"product-card__title\">\r\n\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\tref={nameRef}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tlineHeight: `${defaultHeight}px`,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"large-regular product-card__title-text\">\r\n\t\t\t\t\t\t\t\t\t\t{product.name.length > maxNameLength\r\n\t\t\t\t\t\t\t\t\t\t\t? hovered\r\n\t\t\t\t\t\t\t\t\t\t\t\t? product.name\r\n\t\t\t\t\t\t\t\t\t\t\t\t: productNameCut(product.name)\r\n\t\t\t\t\t\t\t\t\t\t\t: product.name}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<Price\r\n\t\t\t\t\t\t\tbasePrice={product.basePrice}\r\n\t\t\t\t\t\t\tcardType={cardType}\r\n\t\t\t\t\t\t\tcurrentPrice={product.currentPrice}\r\n\t\t\t\t\t\t\tdiscount={product.discount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"product-card__add-menu\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\tcardType === CardType.LARGE\r\n\t\t\t\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t\t\t\t: 'product-card__add-menu-container'\r\n\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t<div className=\"product-card__properties\">\r\n\t\t\t\t\t\t\t\t{product.params ? (\r\n\t\t\t\t\t\t\t\t\t<ProductsParams\r\n\t\t\t\t\t\t\t\t\t\tproduct={product}\r\n\t\t\t\t\t\t\t\t\t\tselectedParams={selectedParams}\r\n\t\t\t\t\t\t\t\t\t\tsetSelectedParams={setSelectedParams}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t{product.params?.color ? (\r\n\t\t\t\t\t\t\t\t\t<ColorPicker\r\n\t\t\t\t\t\t\t\t\t\tproduct={product}\r\n\t\t\t\t\t\t\t\t\t\tselectedParams={selectedParams}\r\n\t\t\t\t\t\t\t\t\t\tsetSelectedParams={setSelectedParams}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{showWarning ? (\r\n\t\t\t\t\t\t\t\t<div className=\"product-card__error\">\r\n\t\t\t\t\t\t\t\t\t{warningMessage}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t<ButtonSolid\r\n\t\t\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t\t\tObject.keys(product.params).length !==\r\n\t\t\t\t\t\t\t\t\tObject.keys(selectedParams).length\r\n\t\t\t\t\t\t\t\t\t\t? (e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowWarning(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst target = e!\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t.currentTarget as HTMLButtonElement;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(target);\r\n\t\t\t\t\t\t\t\t\t\t\t\ttarget.animate(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'translateX(5%)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffset: 0.15,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'translateX(-5%)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffset: 0.3,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'translateX(3%)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffset: 0.45,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'translateX(-3%)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffset: 0.6,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'translateX(1%)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffset: 0.75,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'translateX(-1%)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffset: 0.85,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransform:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'translateX(0)',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration: 500,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titerations: 1,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t: handleAddProductToLocalStorage\r\n\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t{!isInStorage\r\n\t\t\t\t\t\t\t\t\t? 'Add to cart'\r\n\t\t\t\t\t\t\t\t\t: 'Remove from cart'}\r\n\t\t\t\t\t\t\t</ButtonSolid>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProductCard;\r\n","import { useEffect, useState } from 'react';\r\nimport Swiper, { Pagination, A11y } from 'swiper';\r\nimport sortProducts, { ProductFilter } from 'services/sortProducts';\r\nimport ProductCard from 'components/commonComponents/productCard/ProductCard';\r\n\r\nimport 'swiper/css';\r\nimport './productSlider.scss';\r\nimport { CardType } from 'interfaces';\r\nimport {\r\n\tselectProductsStatus,\r\n\tselectProductsValue,\r\n} from 'components/app/productSlice';\r\nimport { useAppSelector } from 'hooks/reduxHooks';\r\n\r\nconst ProductSlider = () => {\r\n\tconst [slides, setSlides] = useState<JSX.Element[] | null>(null);\r\n\tconst status = useAppSelector(selectProductsStatus);\r\n\tconst products = useAppSelector(selectProductsValue);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (slides) {\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\tconst swiper = new Swiper('.product-slider .swiper', {\r\n\t\t\t\tmodules: [Pagination, A11y],\r\n\t\t\t\tspaceBetween: 30,\r\n\t\t\t\tsimulateTouch: true,\r\n\t\t\t\tslidesPerGroup: 6,\r\n\t\t\t\tobserver: true,\r\n\t\t\t\tobserveSlideChildren: true,\r\n\t\t\t\tslidesPerView: 6,\r\n\t\t\t\tbreakpoints: {\r\n\t\t\t\t\t1880: {\r\n\t\t\t\t\t\tslidesPerView: 6,\r\n\t\t\t\t\t\tslidesPerGroup: 6,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t1600: {\r\n\t\t\t\t\t\tslidesPerView: 5,\r\n\t\t\t\t\t\tslidesPerGroup: 5,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t1300: {\r\n\t\t\t\t\t\tslidesPerView: 4,\r\n\t\t\t\t\t\tslidesPerGroup: 4,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t992: {\r\n\t\t\t\t\t\tslidesPerView: 3,\r\n\t\t\t\t\t\tslidesPerGroup: 3,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t768: {\r\n\t\t\t\t\t\tslidesPerView: 2,\r\n\t\t\t\t\t\tslidesPerGroup: 2,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t300: {\r\n\t\t\t\t\t\tslidesPerView: 1,\r\n\t\t\t\t\t\tslidesPerGroup: 1,\r\n\t\t\t\t\t\tspaceBetween: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tpagination: {\r\n\t\t\t\t\tel: '.product-slider .swiper-pagination',\r\n\t\t\t\t\tclickable: true,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tswiper.on('slideChangeTransitionEnd', () => {\r\n\t\t\t\tswiper.update();\r\n\t\t\t\tconsole.log(231);\r\n\t\t\t});\r\n\t\t}\r\n\t}, [slides]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status === 'fulfilled') {\r\n\t\t\tlet productsData = sortProducts(products, 12, ProductFilter.ALL);\r\n\r\n\t\t\tlet productsSlides = productsData.map((product, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"swiper-slide\" key={index}>\r\n\t\t\t\t\t\t<ProductCard\r\n\t\t\t\t\t\t\tproduct={product}\r\n\t\t\t\t\t\t\tcardType={CardType.SMALL}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tsetSlides(productsSlides);\r\n\t\t}\r\n\t}, [status, products]);\r\n\r\n\tlet content = slides ? slides : null;\r\n\treturn (\r\n\t\t<div className=\"product-slider\">\r\n\t\t\t<div className=\"swiper\">\r\n\t\t\t\t<div className=\"swiper-wrapper\">{content}</div>\r\n\r\n\t\t\t\t<div className=\"swiper-pagination\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProductSlider;\r\n","import ProductSlider from '../productSlider/ProductSlider';\r\nimport './newArrivals.scss';\r\n\r\nconst NewArrivals = () => {\r\n\treturn (\r\n\t\t<section className=\"new-arrivals\" id=\"new-arrivals\">\r\n\t\t\t<h2 className=\"heading-1 new-arrivals__heading\">New arrivals</h2>\r\n\t\t\t<div className=\"new-arrivals__text-desc large-regular\">\r\n\t\t\t\tCheck out our latest arrivals for the upcoming season <br />\r\n\t\t\t</div>\r\n\t\t\t<ProductSlider />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default NewArrivals;\r\n","import men from \"img/manCategories_1x.jpg\";\r\nimport women from \"img/womanCategories_1x.jpg\";\r\nimport kid from \"img/kidsCategories_1x.jpg\";\r\nimport \"./topCategories.scss\";\r\n\r\nconst TopCategories = () => {\r\n    return (\r\n        <section>\r\n            <div className=\"top-categories\">\r\n                <div className=\"top-categories__category-card\">\r\n                    <img className=\"top-categories__image\" src={men} alt=\"\" />\r\n                    <h2 className=\"top-categories__text lead-bold\">Women’s</h2>\r\n                </div>\r\n                <div className=\"top-categories__category-card\">\r\n                    <img className=\"top-categories__image\" src={women} alt=\"\" />\r\n                    <h2 className=\"top-categories__text lead-bold\">Men’s</h2>\r\n                </div>\r\n                <div className=\"top-categories__category-card\">\r\n                    <img className=\"top-categories__image\" src={kid} alt=\"\" />\r\n                    <h2 className=\"top-categories__text lead-bold\">Kid’s</h2>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default TopCategories;\r\n","import Banners from \"./banners/Banners\";\r\nimport HeroSlider from \"./heroSlider/HeroSlider\";\r\nimport NewArrivals from \"./newArrivals/NewArrivals\";\r\nimport TopCategories from \"./topCategories/TopCategories\";\r\n\r\nconst MainRoot = () => {\r\n    return (\r\n        <>\r\n            <HeroSlider />\r\n            <TopCategories />\r\n            <NewArrivals />\r\n            <Banners />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainRoot;\r\n"],"names":["memo","props","_props$children","children","_props$addedClasses","addedClasses","_jsx","className","clsx","onClick","_props$timeLeft","timeLeft","days","hours","minutes","seconds","_jsxs","_props$content","content","subTitle","title","button","_props$content$emailS","emailSubscribe","inputPlaceholderText","buttonText","text","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","EMAIL_REGEXP","autoComplete","noValidate","action","onSubmit","event","preventDefault","value","test","email","console","log","axios","then","response","data","status","statusText","headers","config","name","placeholder","onChange","target","ButtonSolid","setTimeLeft","type","BannerType","Link","to","smooth","duration","ButtonOutline","deadline","Date","getFullYear","getMonth","_Fragment","useEffect","deadlines","forEach","banner","push","timerId","setInterval","time","map","timeDifference","diff","Math","floor","clearInterval","timerIndex","index","component","Banner","Timer","SubscribeBanner","findBackgroundColor","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","img","averageColor","color","wrap","_context","prev","next","FastAverageColor","getColorAsync","catch","sent","abrupt","hex","t0","warn","concat","stop","_x","apply","arguments","RenderSlides","_callee2","fetchingData","sliderContent","slidesArr","_context2","URL_HERO_SLIDER_CONTENT","Promise","all","_ref2","slide","_slide$background","_slide$background3","bgColor","backgroundImage","_slide$background2","bgLuminance","fontColor","textColorClass","buttonColor","background","Object","keys","length","image","chroma","luminance","style","backgroundRepeat","backgroundPosition","backgroundSize","subheading","heading","outlineButton","solidButton","_x2","swiperRef","useRef","paginationRef","colorAnalysisInProgress","setColorAnalysisInProgress","_useState3","_useState4","slides","setSlides","setPaginationColor","_paginationRef$curren","current","querySelectorAll","bullet","classList","remove","add","changePaginationColor","_swiperRef$current","_swiperRef$current2","whiteActiveSlide","querySelector","blackActiveSlide","swiper","Swiper","modules","Navigation","Pagination","A11y","observer","simulateTouch","on","slideChangeTransitionStart","observerUpdate","pagination","el","clickable","renderBullet","bulletClassName","currentIndex","navigation","nextEl","prevEl","res","destroy","spinner","Spinner","ref","numberOfNumbers","maxNumber","haveIt","i","generateUniqueRandomNumber","random","includes","error","ProductFilter","products","quantity","undefined","filter","ALL","WITHOUTDISCOUNT","WITHDISCOUNT","item","discount","randomProducts","generateUniqueRandomNumbers","Error","_product$params","product","cardType","productsLocalStorageData","useAppSelector","selectLocalStorageProductsValue","dispatch","useAppDispatch","selectedParams","setSelectedParams","showWarning","setShowWarning","_useState5","_useState6","hovered","setHovered","nameRef","cardRef","propsValues","values","sortedValue","sort","a","b","toLowerCase","localeCompare","productId","id","join","isInStorage","find","productInStorage","params","handleTitleMouseHover","e","textContent","height","getBoundingClientRect","requiredParamsKeys","lastParams","pop","warningMessage","loading","src","imageAndVideo","url","alt","width","rating","CardType","onMouseOver","onMouseOut","lineHeight","nameDivided","split","returnName","currentLength","productNameCut","Price","basePrice","currentPrice","ProductsParams","ColorPicker","currentTarget","animate","transform","offset","iterations","removeProductFromLocalStorage","addProductToLocalStorage","selectedProductParams","selectProductsStatus","selectProductsValue","spaceBetween","slidesPerGroup","observeSlideChildren","slidesPerView","breakpoints","update","productsSlides","sortProducts","ProductCard","ProductSlider","men","women","kid","HeroSlider","TopCategories","NewArrivals","Banners"],"sourceRoot":""}