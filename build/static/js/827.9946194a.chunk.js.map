{"version":3,"file":"static/js/827.9946194a.chunk.js","mappings":"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","sources":["../node_modules/fast-average-color/dist/index.esm.js","../node_modules/chroma-js/chroma.js"],"sourcesContent":["/*! Fast Average Color | © 2022 Denis Seleznev | MIT License | https://github.com/fast-average-color/fast-average-color */\nfunction toHex(num) {\n    var str = num.toString(16);\n    return str.length === 1 ? '0' + str : str;\n}\nfunction arrayToHex(arr) {\n    return '#' + arr.map(toHex).join('');\n}\nfunction isDark(color) {\n    // http://www.w3.org/TR/AERT#color-contrast\n    var result = (color[0] * 299 + color[1] * 587 + color[2] * 114) / 1000;\n    return result < 128;\n}\nfunction prepareIgnoredColor(color) {\n    if (!color) {\n        return [];\n    }\n    return isRGBArray(color) ? color : [color];\n}\nfunction isRGBArray(value) {\n    return Array.isArray(value[0]);\n}\nfunction isIgnoredColor(data, index, ignoredColor) {\n    for (var i = 0; i < ignoredColor.length; i++) {\n        if (isIgnoredColorAsNumbers(data, index, ignoredColor[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isIgnoredColorAsNumbers(data, index, ignoredColor) {\n    switch (ignoredColor.length) {\n        case 3:\n            // [red, green, blue]\n            if (isIgnoredRGBColor(data, index, ignoredColor)) {\n                return true;\n            }\n            break;\n        case 4:\n            // [red, green, blue, alpha]\n            if (isIgnoredRGBAColor(data, index, ignoredColor)) {\n                return true;\n            }\n            break;\n        case 5:\n            // [red, green, blue, alpha, threshold]\n            if (isIgnoredRGBAColorWithThreshold(data, index, ignoredColor)) {\n                return true;\n            }\n            break;\n        default:\n            return false;\n    }\n}\nfunction isIgnoredRGBColor(data, index, ignoredColor) {\n    // Ignore if the pixel are transparent.\n    if (data[index + 3] !== 255) {\n        return true;\n    }\n    if (data[index] === ignoredColor[0] &&\n        data[index + 1] === ignoredColor[1] &&\n        data[index + 2] === ignoredColor[2]) {\n        return true;\n    }\n    return false;\n}\nfunction isIgnoredRGBAColor(data, index, ignoredColor) {\n    if (data[index + 3] && ignoredColor[3]) {\n        return data[index] === ignoredColor[0] &&\n            data[index + 1] === ignoredColor[1] &&\n            data[index + 2] === ignoredColor[2] &&\n            data[index + 3] === ignoredColor[3];\n    }\n    // Ignore rgb components if the pixel are fully transparent.\n    return data[index + 3] === ignoredColor[3];\n}\nfunction inRange(colorComponent, ignoredColorComponent, value) {\n    return colorComponent >= (ignoredColorComponent - value) &&\n        colorComponent <= (ignoredColorComponent + value);\n}\nfunction isIgnoredRGBAColorWithThreshold(data, index, ignoredColor) {\n    var redIgnored = ignoredColor[0];\n    var greenIgnored = ignoredColor[1];\n    var blueIgnored = ignoredColor[2];\n    var alphaIgnored = ignoredColor[3];\n    var threshold = ignoredColor[4];\n    var alphaData = data[index + 3];\n    var alphaInRange = inRange(alphaData, alphaIgnored, threshold);\n    if (!alphaIgnored) {\n        return alphaInRange;\n    }\n    if (!alphaData && alphaInRange) {\n        return true;\n    }\n    if (inRange(data[index], redIgnored, threshold) &&\n        inRange(data[index + 1], greenIgnored, threshold) &&\n        inRange(data[index + 2], blueIgnored, threshold) &&\n        alphaInRange) {\n        return true;\n    }\n    return false;\n}\n\nfunction dominantAlgorithm(arr, len, options) {\n    var colorHash = {};\n    var divider = 24;\n    var ignoredColor = options.ignoredColor;\n    var step = options.step;\n    var max = [0, 0, 0, 0, 0];\n    for (var i = 0; i < len; i += step) {\n        var red = arr[i];\n        var green = arr[i + 1];\n        var blue = arr[i + 2];\n        var alpha = arr[i + 3];\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n        var key = Math.round(red / divider) + ',' +\n            Math.round(green / divider) + ',' +\n            Math.round(blue / divider);\n        if (colorHash[key]) {\n            colorHash[key] = [\n                colorHash[key][0] + red * alpha,\n                colorHash[key][1] + green * alpha,\n                colorHash[key][2] + blue * alpha,\n                colorHash[key][3] + alpha,\n                colorHash[key][4] + 1\n            ];\n        }\n        else {\n            colorHash[key] = [red * alpha, green * alpha, blue * alpha, alpha, 1];\n        }\n        if (max[4] < colorHash[key][4]) {\n            max = colorHash[key];\n        }\n    }\n    var redTotal = max[0];\n    var greenTotal = max[1];\n    var blueTotal = max[2];\n    var alphaTotal = max[3];\n    var count = max[4];\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction simpleAlgorithm(arr, len, options) {\n    var redTotal = 0;\n    var greenTotal = 0;\n    var blueTotal = 0;\n    var alphaTotal = 0;\n    var count = 0;\n    var ignoredColor = options.ignoredColor;\n    var step = options.step;\n    for (var i = 0; i < len; i += step) {\n        var alpha = arr[i + 3];\n        var red = arr[i] * alpha;\n        var green = arr[i + 1] * alpha;\n        var blue = arr[i + 2] * alpha;\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n        redTotal += red;\n        greenTotal += green;\n        blueTotal += blue;\n        alphaTotal += alpha;\n        count++;\n    }\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction sqrtAlgorithm(arr, len, options) {\n    var redTotal = 0;\n    var greenTotal = 0;\n    var blueTotal = 0;\n    var alphaTotal = 0;\n    var count = 0;\n    var ignoredColor = options.ignoredColor;\n    var step = options.step;\n    for (var i = 0; i < len; i += step) {\n        var red = arr[i];\n        var green = arr[i + 1];\n        var blue = arr[i + 2];\n        var alpha = arr[i + 3];\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n        redTotal += red * red * alpha;\n        greenTotal += green * green * alpha;\n        blueTotal += blue * blue * alpha;\n        alphaTotal += alpha;\n        count++;\n    }\n    return alphaTotal ? [\n        Math.round(Math.sqrt(redTotal / alphaTotal)),\n        Math.round(Math.sqrt(greenTotal / alphaTotal)),\n        Math.round(Math.sqrt(blueTotal / alphaTotal)),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction getDefaultColor(options) {\n    return getOption(options, 'defaultColor', [0, 0, 0, 0]);\n}\nfunction getOption(options, name, defaultValue) {\n    return (options[name] === undefined ? defaultValue : options[name]);\n}\n\nvar MIN_SIZE = 10;\nvar MAX_SIZE = 100;\nfunction isSvg(filename) {\n    return filename.search(/\\.svg(\\?|$)/i) !== -1;\n}\nfunction getOriginalSize(resource) {\n    if (isInstanceOfHTMLImageElement(resource)) {\n        var width = resource.naturalWidth;\n        var height = resource.naturalHeight;\n        // For SVG images with only viewBox attribute\n        if (!resource.naturalWidth && isSvg(resource.src)) {\n            width = height = MAX_SIZE;\n        }\n        return {\n            width: width,\n            height: height,\n        };\n    }\n    if (isInstanceOfHTMLVideoElement(resource)) {\n        return {\n            width: resource.videoWidth,\n            height: resource.videoHeight\n        };\n    }\n    return {\n        width: resource.width,\n        height: resource.height\n    };\n}\nfunction getSrc(resource) {\n    if (isInstanceOfHTMLCanvasElement(resource)) {\n        return 'canvas';\n    }\n    if (isInstanceOfOffscreenCanvas(resource)) {\n        return 'offscreencanvas';\n    }\n    if (isInstanceOfImageBitmap(resource)) {\n        return 'imagebitmap';\n    }\n    return resource.src;\n}\nfunction isInstanceOfHTMLImageElement(resource) {\n    return typeof HTMLImageElement !== 'undefined' && resource instanceof HTMLImageElement;\n}\nvar hasOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\nfunction isInstanceOfOffscreenCanvas(resource) {\n    return hasOffscreenCanvas && resource instanceof OffscreenCanvas;\n}\nfunction isInstanceOfHTMLVideoElement(resource) {\n    return typeof HTMLVideoElement !== 'undefined' && resource instanceof HTMLVideoElement;\n}\nfunction isInstanceOfHTMLCanvasElement(resource) {\n    return typeof HTMLCanvasElement !== 'undefined' && resource instanceof HTMLCanvasElement;\n}\nfunction isInstanceOfImageBitmap(resource) {\n    return typeof ImageBitmap !== 'undefined' && resource instanceof ImageBitmap;\n}\nfunction prepareSizeAndPosition(originalSize, options) {\n    var srcLeft = getOption(options, 'left', 0);\n    var srcTop = getOption(options, 'top', 0);\n    var srcWidth = getOption(options, 'width', originalSize.width);\n    var srcHeight = getOption(options, 'height', originalSize.height);\n    var destWidth = srcWidth;\n    var destHeight = srcHeight;\n    if (options.mode === 'precision') {\n        return {\n            srcLeft: srcLeft,\n            srcTop: srcTop,\n            srcWidth: srcWidth,\n            srcHeight: srcHeight,\n            destWidth: destWidth,\n            destHeight: destHeight\n        };\n    }\n    var factor;\n    if (srcWidth > srcHeight) {\n        factor = srcWidth / srcHeight;\n        destWidth = MAX_SIZE;\n        destHeight = Math.round(destWidth / factor);\n    }\n    else {\n        factor = srcHeight / srcWidth;\n        destHeight = MAX_SIZE;\n        destWidth = Math.round(destHeight / factor);\n    }\n    if (destWidth > srcWidth || destHeight > srcHeight ||\n        destWidth < MIN_SIZE || destHeight < MIN_SIZE) {\n        destWidth = srcWidth;\n        destHeight = srcHeight;\n    }\n    return {\n        srcLeft: srcLeft,\n        srcTop: srcTop,\n        srcWidth: srcWidth,\n        srcHeight: srcHeight,\n        destWidth: destWidth,\n        destHeight: destHeight\n    };\n}\nvar isWebWorkers = typeof window === 'undefined';\nfunction makeCanvas() {\n    if (isWebWorkers) {\n        return hasOffscreenCanvas ? new OffscreenCanvas(1, 1) : null;\n    }\n    return document.createElement('canvas');\n}\n\nvar ERROR_PREFIX = 'FastAverageColor: ';\nfunction getError(message) {\n    return Error(ERROR_PREFIX + message);\n}\nfunction outputError(error, silent) {\n    if (!silent) {\n        console.error(error);\n    }\n}\n\nvar FastAverageColor = /** @class */ (function () {\n    function FastAverageColor() {\n        this.canvas = null;\n        this.ctx = null;\n    }\n    /**\n     * Get asynchronously the average color from not loaded image.\n     */\n    FastAverageColor.prototype.getColorAsync = function (resource, options) {\n        if (!resource) {\n            return Promise.reject(getError('call .getColorAsync() without resource.'));\n        }\n        if (typeof resource === 'string') {\n            // Web workers\n            if (typeof Image === 'undefined') {\n                return Promise.reject(getError('resource as string is not supported in this environment'));\n            }\n            var img = new Image();\n            img.crossOrigin = options && options.crossOrigin || '';\n            img.src = resource;\n            return this.bindImageEvents(img, options);\n        }\n        else if (isInstanceOfHTMLImageElement(resource) && !resource.complete) {\n            return this.bindImageEvents(resource, options);\n        }\n        else {\n            var result = this.getColor(resource, options);\n            return result.error ? Promise.reject(result.error) : Promise.resolve(result);\n        }\n    };\n    /**\n     * Get the average color from images, videos and canvas.\n     */\n    FastAverageColor.prototype.getColor = function (resource, options) {\n        options = options || {};\n        var defaultColor = getDefaultColor(options);\n        if (!resource) {\n            var error = getError('call .getColor(null) without resource');\n            outputError(error, options.silent);\n            return this.prepareResult(defaultColor, error);\n        }\n        var originalSize = getOriginalSize(resource);\n        var size = prepareSizeAndPosition(originalSize, options);\n        if (!size.srcWidth || !size.srcHeight || !size.destWidth || !size.destHeight) {\n            var error = getError(\"incorrect sizes for resource \\\"\".concat(getSrc(resource), \"\\\"\"));\n            outputError(error, options.silent);\n            return this.prepareResult(defaultColor, error);\n        }\n        if (!this.canvas) {\n            this.canvas = makeCanvas();\n            if (!this.canvas) {\n                var error = getError('OffscreenCanvas is not supported in this browser');\n                outputError(error, options.silent);\n                return this.prepareResult(defaultColor, error);\n            }\n        }\n        if (!this.ctx) {\n            this.ctx = this.canvas.getContext('2d', { willReadFrequently: true });\n            if (!this.ctx) {\n                var error = getError('Canvas Context 2D is not supported in this browser');\n                outputError(error, options.silent);\n                return this.prepareResult(defaultColor);\n            }\n            this.ctx.imageSmoothingEnabled = false;\n        }\n        this.canvas.width = size.destWidth;\n        this.canvas.height = size.destHeight;\n        try {\n            this.ctx.clearRect(0, 0, size.destWidth, size.destHeight);\n            this.ctx.drawImage(resource, size.srcLeft, size.srcTop, size.srcWidth, size.srcHeight, 0, 0, size.destWidth, size.destHeight);\n            var bitmapData = this.ctx.getImageData(0, 0, size.destWidth, size.destHeight).data;\n            return this.prepareResult(this.getColorFromArray4(bitmapData, options));\n        }\n        catch (originalError) {\n            var error = getError(\"security error (CORS) for resource \".concat(getSrc(resource), \".\\nDetails: https://developer.mozilla.org/en/docs/Web/HTML/CORS_enabled_image\"));\n            outputError(error, options.silent);\n            !options.silent && console.error(originalError);\n            return this.prepareResult(defaultColor, error);\n        }\n    };\n    /**\n     * Get the average color from a array when 1 pixel is 4 bytes.\n     */\n    FastAverageColor.prototype.getColorFromArray4 = function (arr, options) {\n        options = options || {};\n        var bytesPerPixel = 4;\n        var arrLength = arr.length;\n        var defaultColor = getDefaultColor(options);\n        if (arrLength < bytesPerPixel) {\n            return defaultColor;\n        }\n        var len = arrLength - arrLength % bytesPerPixel;\n        var step = (options.step || 1) * bytesPerPixel;\n        var algorithm;\n        switch (options.algorithm || 'sqrt') {\n            case 'simple':\n                algorithm = simpleAlgorithm;\n                break;\n            case 'sqrt':\n                algorithm = sqrtAlgorithm;\n                break;\n            case 'dominant':\n                algorithm = dominantAlgorithm;\n                break;\n            default:\n                throw getError(\"\".concat(options.algorithm, \" is unknown algorithm\"));\n        }\n        return algorithm(arr, len, {\n            defaultColor: defaultColor,\n            ignoredColor: prepareIgnoredColor(options.ignoredColor),\n            step: step\n        });\n    };\n    /**\n     * Get color data from value ([r, g, b, a]).\n     */\n    FastAverageColor.prototype.prepareResult = function (value, error) {\n        var rgb = value.slice(0, 3);\n        var rgba = [value[0], value[1], value[2], value[3] / 255];\n        var isDarkColor = isDark(value);\n        return {\n            value: [value[0], value[1], value[2], value[3]],\n            rgb: 'rgb(' + rgb.join(',') + ')',\n            rgba: 'rgba(' + rgba.join(',') + ')',\n            hex: arrayToHex(rgb),\n            hexa: arrayToHex(value),\n            isDark: isDarkColor,\n            isLight: !isDarkColor,\n            error: error,\n        };\n    };\n    /**\n     * Destroy the instance.\n     */\n    FastAverageColor.prototype.destroy = function () {\n        if (this.canvas) {\n            this.canvas.width = 1;\n            this.canvas.height = 1;\n            this.canvas = null;\n        }\n        this.ctx = null;\n    };\n    FastAverageColor.prototype.bindImageEvents = function (resource, options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var onload = function () {\n                unbindEvents();\n                var result = _this.getColor(resource, options);\n                if (result.error) {\n                    reject(result.error);\n                }\n                else {\n                    resolve(result);\n                }\n            };\n            var onerror = function () {\n                unbindEvents();\n                reject(getError(\"Error loading image \\\"\".concat(resource.src, \"\\\".\")));\n            };\n            var onabort = function () {\n                unbindEvents();\n                reject(getError(\"Image \\\"\".concat(resource.src, \"\\\" loading aborted\")));\n            };\n            var unbindEvents = function () {\n                resource.removeEventListener('load', onload);\n                resource.removeEventListener('error', onerror);\n                resource.removeEventListener('abort', onabort);\n            };\n            resource.addEventListener('load', onload);\n            resource.addEventListener('error', onerror);\n            resource.addEventListener('abort', onabort);\n        });\n    };\n    return FastAverageColor;\n}());\n\nexport { FastAverageColor };\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n"],"names":["toHex","num","str","toString","length","arrayToHex","arr","map","join","prepareIgnoredColor","color","value","Array","isArray","isIgnoredColor","data","index","ignoredColor","i","isIgnoredColorAsNumbers","isIgnoredRGBColor","isIgnoredRGBAColor","redIgnored","greenIgnored","blueIgnored","alphaIgnored","threshold","alphaData","alphaInRange","inRange","isIgnoredRGBAColorWithThreshold","colorComponent","ignoredColorComponent","dominantAlgorithm","len","options","colorHash","step","max","red","green","blue","alpha","key","Math","round","redTotal","greenTotal","blueTotal","alphaTotal","count","defaultColor","simpleAlgorithm","sqrtAlgorithm","sqrt","getDefaultColor","getOption","name","defaultValue","undefined","getOriginalSize","resource","isInstanceOfHTMLImageElement","width","naturalWidth","height","naturalHeight","src","search","HTMLVideoElement","isInstanceOfHTMLVideoElement","videoWidth","videoHeight","getSrc","HTMLCanvasElement","isInstanceOfHTMLCanvasElement","hasOffscreenCanvas","OffscreenCanvas","isInstanceOfOffscreenCanvas","ImageBitmap","isInstanceOfImageBitmap","HTMLImageElement","isWebWorkers","window","getError","message","Error","outputError","error","silent","console","FastAverageColor","this","canvas","ctx","prototype","getColorAsync","Promise","reject","Image","img","crossOrigin","bindImageEvents","complete","result","getColor","resolve","prepareResult","size","originalSize","factor","srcLeft","srcTop","srcWidth","srcHeight","destWidth","destHeight","mode","prepareSizeAndPosition","concat","document","createElement","getContext","willReadFrequently","imageSmoothingEnabled","clearRect","drawImage","bitmapData","getImageData","getColorFromArray4","originalError","arrLength","algorithm","rgb","slice","rgba","isDarkColor","hex","hexa","isDark","isLight","destroy","_this","onload","unbindEvents","onerror","onabort","removeEventListener","addEventListener","module","exports","limit$2","x","min","limit$1","clip_rgb$3","_clipped","_unclipped","classToType","i$1","list$1","toLowerCase","type$p","obj","Object","call","type$o","unpack$B","args","keyOrder","split","filter","k","type$n","last$4","l","PI$2","PI","utils","clip_rgb","limit","type","unpack","last","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input$h","format","autodetect","last$3","clip_rgb$2","type$m","_input","Color$D","arguments","me","constructor","sorted","sort","a","b","p","list","chk","test","apply","_rgb","push","Color_1","chroma$k","Function","bind","Color","version","chroma_1","unpack$A","max$2","rgb2cmyk$1","ref","r","g","f","rgb2cmyk_1","unpack$z","cmyk2rgb","c","m","y","cmyk2rgb_1","chroma$j","Color$C","input$g","unpack$y","type$l","rgb2cmyk","cmyk","unpack$x","last$2","rnd","hsl2css$1","hsla","hsl2css_1","unpack$w","rgb2hsl$3","s","h","Number","NaN","rgb2hsl_1","unpack$v","last$1","hsl2css","rgb2hsl$2","round$6","rgb2css$1","substr","rgb2css_1","unpack$u","round$5","hsl2rgb$1","assign","t3","t2","t1","h_","hsl2rgb_1","hsl2rgb","input$f","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$4","css2rgb$1","css","trim","named","e","match","rgb$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","css2rgb_1","chroma$i","Color$B","input$e","type$k","rgb2css","css2rgb","rest","Color$A","chroma$h","input$d","unpack$t","gl","unpack$s","rgb2hcg$1","delta","_g","rgb2hcg_1","unpack$r","floor$3","floor","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","v","hcg2rgb_1","unpack$q","type$j","chroma$g","Color$z","input$c","rgb2hcg","hcg","unpack$p","round$3","rgb2hex$2","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb_1","u","parseInt","u$1","chroma$f","Color$y","type$i","input$b","rgb2hex$1","indexOf","unpack$o","TWOPI$2","min$2","sqrt$4","acos","rgb2hsi$1","min_","rgb2hsi_1","unpack$n","TWOPI$1","cos$4","cos","hsi2rgb","isNaN","hsi2rgb_1","unpack$m","type$h","chroma$e","Color$x","input$a","rgb2hsi","hsi","unpack$l","type$g","chroma$d","Color$w","input$9","rgb2hsl$1","unpack$k","min$1","max$1","rgb2hsl","max_","rgb2hsv$1","unpack$j","floor$2","hsv2rgb","hsv2rgb_1","unpack$i","type$f","chroma$c","Color$v","input$8","rgb2hsv","hsv","labConstants","Kn","Xn","Yn","Zn","t0","LAB_CONSTANTS$3","unpack$h","pow$a","pow","rgb2lab$2","ref$1","rgb2xyz","rgb_xyz","xyz_lab","rgb2lab_1","LAB_CONSTANTS$2","unpack$g","pow$9","lab2rgb$1","z","lab_xyz","xyz_rgb","lab2rgb_1","unpack$f","type$e","chroma$b","Color$u","input$7","rgb2lab$1","lab","unpack$e","sqrt$3","atan2$2","atan2","round$2","lab2lch$2","lab2lch_1","unpack$d","rgb2lab","lab2lch$1","rgb2lch$1","b_","rgb2lch_1","unpack$c","sin$3","sin","cos$3","lch2lab$2","lch2lab_1","unpack$b","lch2lab$1","lab2rgb","lch2rgb$1","L","lch2rgb_1","unpack$a","lch2rgb","hcl2rgb","hcl","reverse","hcl2rgb_1","unpack$9","type$d","chroma$a","Color$t","input$6","rgb2lch","lch","forEach","w3cx11_1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color$s","input$5","type$c","w3cx11","hex2rgb","rgb2hex","keys","n","unpack$8","rgb2num$1","rgb2num_1","type$b","num2rgb_1","chroma$9","Color$r","input$4","type$a","rgb2num","chroma$8","Color$q","input$3","unpack$7","type$9","round$1","log$1","log","temperature2rgb_1","kelvin","temp","temperature2rgb","unpack$6","rgb2temperature$1","minTemp","maxTemp","eps","chroma$7","Color$p","input$2","rgb2temperature","temperature","unpack$5","cbrt","pow$8","sign$1","sign","rgb2oklab$2","rgb2lrgb","lr","lg","lb","rgb2oklab_1","abs","unpack$4","pow$7","oklab2rgb$1","lrgb2rgb","oklab2rgb_1","unpack$3","type$8","chroma$6","Color$o","input$1","rgb2oklab$1","oklab","unpack$2","rgb2oklab","lab2lch","rgb2oklch$1","rgb2oklch_1","unpack$1","lch2lab","oklab2rgb","oklch2rgb","oklch2rgb_1","type$7","chroma$5","Color$n","input","rgb2oklch","oklch","Color$m","type$6","mutate","clipped","Color$k","LAB_CONSTANTS$1","darken","amount","brighten","darker","brighter","get","mc","channel","Color$i","type$5","pow$6","EPS","MAX_ITER","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","rgb2luminance","luminance_x","interpolator$1","Color$h","type$4","interpolator","mix$1","col1","col2","Color$g","mix","Color$f","premultiply","Color$e","LAB_CONSTANTS","saturate","desaturate","Color$d","type$3","set","charAt","out","Color$c","xyz0","xyz1","Color$b","sqrt$2","pow$5","lrgb","x1","y1","z1","x2","y2","z2","Color$a","Color$9","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","interpolate_hsx$5","Color$8","c1","c2","interpolate_hsx$4","interpolate_hsx$3","interpolate_hsx$2","interpolate_hsx$1","Color$7","interpolate_hsx","Color$6","clip_rgb$1","pow$4","sqrt$1","PI$1","cos$2","sin$2","atan2$1","average","colors","weights","from","reduce","w","_average_lrgb","first","shift","xyz","cnt","dx","dy","A","ci","xyz2","A$1","col","chroma$4","type$2","pow$3","scale$2","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","getClass","tMapLightness","tMapDomain","val","bypassMap","classes","d","analyze","limits","domain","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","Color$5","scale$1","binom_row","row","newrow","j","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","sum","el","bezier_1","scale","chroma$3","blend","bottom","top","blend_f","c0","each","normal","multiply","lighten","screen","overlay","burn","dodge","blend_1","type$1","pow$2","sin$1","cos$1","chroma$2","cubehelix","start","rotations","lightness","dl","dh","fract","amp","cos_a","sin_a","Color$4","digits","floor$1","random","random_1","code","pow$1","abs$1","MAX_VALUE","values","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","Color$3","contrast","l1","l2","Color$2","exp","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rt","Color$1","distance","sum_sq","valid","chroma$1","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewer_1","chroma","factory"],"sourceRoot":""}